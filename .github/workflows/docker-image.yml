name: Build & Deploy

on:
  push:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v22.2
    - name: List all changed files
      run: |       
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          echo "$file was changed"
        done
        if [[ $(echo ${{ steps.changed-files.outputs.all_changed_files }}) == "requirements.txt" ]]; then
          exit 1 # dependabot
        fi
    - name: Set output
      run: echo "IMAGE_VERSION=${{ secrets.DOCKERHUB_USERNAME }}/rootme-badge-generator:$(date +%Y-%m-%d-%H-%M-%S)" >> $GITHUB_ENV
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: ${{ env.IMAGE_VERSION }}
    - name: Set artifact
      run: echo ${{ env.IMAGE_VERSION }} > version.txt
    - uses: actions/upload-artifact@v2
      with:
        name: image-version
        path: version.txt
  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v2
        with:
          name: image-version
      - name: Compute image version
        run: >
          echo "IMAGE_VERSION=$(cat version.txt)" >> $GITHUB_ENV
      - name: Compute values.yaml
        run: |
          cat > /tmp/values.yaml << EOF
          image: ${{ env.IMAGE_VERSION }}
          rootme_username: ${{ secrets.ROOTME_ACCOUNT_USERNAME }}
          rootme_password: ${{ secrets.ROOTME_ACCOUNT_PASSWORD }}
          EOF
      - name: Apply helm release
        run: |
          helm upgrade --install rootme-badge-generator -f /tmp/values.yaml ./charts
        
    

